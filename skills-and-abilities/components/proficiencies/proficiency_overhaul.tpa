/*************************************************************************/
///////////////////////////////////////////////////////////////////////////
// Skills and Abilities - Proficiency Overhaul                           //
///////////////////////////////////////////////////////////////////////////
/*************************************************************************/

///////////////////////////////////////////////////////////////////////////
// Import Files                                                          //
///////////////////////////////////////////////////////////////////////////
COPY ~skills-and-abilities/itm/moprof.itm~ ~override~ // For tracking of this mod component
COPY ~skills-and-abilities/2da/PROFS.2DA~ ~override~                   // Updates the frequency profs are gained
COPY ~skills-and-abilities/eff/proficiencies/MOARC01.EFF~   ~override~ // Archery Weapon Style
COPY ~skills-and-abilities/eff/proficiencies/MOARC02.EFF~   ~override~ // Archery Weapon Style
COPY ~skills-and-abilities/spl/proficiencies/MOARC01.SPL~   ~override~ // Archery Weapon Style
COPY ~skills-and-abilities/spl/proficiencies/MOARC02.SPL~   ~override~ // Archery Weapon Style
COPY ~skills-and-abilities/spl/proficiencies/MOARM06.SPL~   ~override~ // Armor 6th pip
COPY ~skills-and-abilities/spl/proficiencies/MOARM66.SPL~   ~override~ // Armor 6th pip
COPY ~skills-and-abilities/eff/proficiencies/MOARM06.EFF~   ~override~ // Armor 6th pip
//COPY ~skills-and-abilities/spl/proficiencies/MOCRS01.SPL~   ~override~ // Critical Striker Weapon Style
//COPY ~skills-and-abilities/spl/proficiencies/MOCRS02.SPL~   ~override~ // Critical Striker Weapon Style
//COPY ~skills-and-abilities/spl/proficiencies/MOCRS03.SPL~   ~override~ // Critical Striker Weapon Style

ACTION_FOR_EACH prof IN
      1
      2
      3
      4
      5 
    BEGIN
      // Armor Prof
      COPY ~skills-and-abilities/spl/proficiencies/MOARM0%prof%.SPL~       ~override~
      COPY ~skills-and-abilities/spl/proficiencies/MOARM%prof%%prof%.SPL~  ~override~
      COPY ~skills-and-abilities/eff/proficiencies/MOARM0%prof%.EFF~       ~override~
      // Spellcraft Profs
      COPY ~skills-and-abilities/spl/proficiencies/MOSPL0%prof%.SPL~       ~override~
      COPY ~skills-and-abilities/spl/proficiencies/MOSPL%prof%%prof%.SPL~  ~override~
      COPY ~skills-and-abilities/eff/proficiencies/MOSPL0%prof%.EFF~       ~override~
      COPY ~skills-and-abilities/spl/proficiencies/MOSPLC%prof%.SPL~       ~override~
      // Devotion Profs
      COPY ~skills-and-abilities/spl/proficiencies/MODEV0%prof%.SPL~       ~override~
      COPY ~skills-and-abilities/spl/proficiencies/MODEV%prof%%prof%.SPL~  ~override~
      COPY ~skills-and-abilities/eff/proficiencies/MODEV0%prof%.EFF~       ~override~
      COPY ~skills-and-abilities/spl/proficiencies/MODEVC%prof%.SPL~       ~override~
      // Resilience Profs
      //COPY ~skills-and-abilities/spl/proficiencies/MOPRS0%prof%.SPL~       ~override~
      //COPY ~skills-and-abilities/spl/proficiencies/MOPRS%prof%%prof%.SPL~  ~override~
      //COPY ~skills-and-abilities/eff/proficiencies/MOPRS0%prof%.EFF~       ~override~
      //COPY ~skills-and-abilities/spl/proficiencies/MOPRSC%prof%.SPL~       ~override~
      // Elemental Resistance Profs
      //COPY ~skills-and-abilities/spl/proficiencies/MOERS0%prof%.SPL~       ~override~
      //COPY ~skills-and-abilities/spl/proficiencies/MOERS%prof%%prof%.SPL~  ~override~
      //COPY ~skills-and-abilities/eff/proficiencies/MOERS0%prof%.EFF~       ~override~
      //COPY ~skills-and-abilities/spl/proficiencies/MOERSC%prof%.SPL~       ~override~
    END

// Import Blank Wizard/Sorcerer CLAB Files
ACTION_FOR_EACH wiz_clab IN
      1
      2
      3
      4
      5
      6
      7
      8
      9
    BEGIN
      ACTION_IF !FILE_EXISTS_IN_GAME ~CLABMA0%wiz_clab%.2DA~ THEN BEGIN
        COPY ~skills-and-abilities/2da/CLABMA01.2DA~ ~override/CLABMA0%wiz_clab%.2DA~
      END
END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Move Proficiencies into OG BG1 Weapon Groups                          //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
// Move Proficiency Points to Weapon Groups                              //
///////////////////////////////////////////////////////////////////////////
COPY_EXISTING ~WEAPPROF.2DA~ ~override~
    READ_2DA_ENTRIES_NOW weapprof 3
    COUNT_2DA_COLS cols
    FOR (col = 2; col < cols; ++col) BEGIN
        // Bows
        READ_2DA_ENTRY 24 col cols bow // longbow
        READ_2DA_ENTRY 25 col cols shortbow
        PATCH_IF (bow < shortbow) BEGIN SET bow = shortbow END

        // Spiked
        READ_2DA_ENTRY 20 col cols spiked

        // Small Sword
        READ_2DA_ENTRY 10 col cols ssword // short sword
        READ_2DA_ENTRY 15 col cols dagger
        PATCH_IF (ssword < dagger) BEGIN SET ssword = dagger END

        // Large Sword
        READ_2DA_ENTRY 8 col cols lsword // bastard
        READ_2DA_ENTRY 9 col cols longsword
        READ_2DA_ENTRY 12 col cols twohanded
        READ_2DA_ENTRY 13 col cols katana
        READ_2DA_ENTRY 14 col cols scimitar
        PATCH_IF (lsword < longsword) BEGIN SET lsword = longsword END
        PATCH_IF (lsword < twohanded) BEGIN SET lsword = twohanded END
        PATCH_IF (lsword < katana) BEGIN SET lsword = katana END
        PATCH_IF (lsword < scimitar) BEGIN SET lsword = scimitar END

        // Axe
        READ_2DA_ENTRY 11 col cols axe

        // Blunt
        READ_2DA_ENTRY 16 col cols blunt // warhammer
        READ_2DA_ENTRY 17 col cols club
        READ_2DA_ENTRY 21 col cols mace
        READ_2DA_ENTRY 22 col cols staff
        PATCH_IF (blunt < club) BEGIN SET blunt = club END
        PATCH_IF (blunt < mace) BEGIN SET blunt = mace END
        PATCH_IF (blunt < staff) BEGIN SET blunt = staff END

        // Missile
        READ_2DA_ENTRY 23 col cols missile // crossbow
        READ_2DA_ENTRY 26 col cols dart
        READ_2DA_ENTRY 27 col cols sling
        PATCH_IF (missile < dart) BEGIN SET missile = dart END
        PATCH_IF (missile < sling) BEGIN SET missile = sling END

        // Spear
        READ_2DA_ENTRY 20 col cols spear
        READ_2DA_ENTRY 19 col cols halberd
        PATCH_IF (spear < halberd) BEGIN SET spear = halberd END

        // Set Old Proficiencies to 0 - These will be reused/updated to new ones
        FOR (row = 11; row < 31; ++row) BEGIN
            SET_2DA_ENTRY row col 1 ~0~
        END

        // Set New Proficiency Points
        SET_2DA_ENTRY 21 col 1 ~%bow%~
        SET_2DA_ENTRY 22 col 1 ~%spiked%~
        SET_2DA_ENTRY 23 col 1 ~%ssword%~
        SET_2DA_ENTRY 24 col 1 ~%lsword%~
        SET_2DA_ENTRY 25 col 1 ~%axe%~
        SET_2DA_ENTRY 26 col 1 ~%blunt%~
        SET_2DA_ENTRY 27 col 1 ~%missile%~
        SET_2DA_ENTRY 28 col 1 ~%spear%~

    END
    SET_2DA_ENTRY 21 0 1 ~BOW~
    SET_2DA_ENTRY 21 2 1 ~mobow1~
    SET_2DA_ENTRY 21 3 1 ~mobow2~    
    SET_2DA_ENTRY 22 0 1 ~SPIKED~
    SET_2DA_ENTRY 22 2 1 ~mospike1~
    SET_2DA_ENTRY 22 3 1 ~mospike2~
    SET_2DA_ENTRY 23 0 1 ~SMALL_SWORD~
    SET_2DA_ENTRY 23 2 1 ~mossword1~
    SET_2DA_ENTRY 23 3 1 ~mossword2~
    SET_2DA_ENTRY 24 0 1 ~LARGE_SWORD~
    SET_2DA_ENTRY 24 2 1 ~molsword1~
    SET_2DA_ENTRY 24 3 1 ~molsword2~
    SET_2DA_ENTRY 25 0 1 ~AXE~
    SET_2DA_ENTRY 25 2 1 ~moaxe1~
    SET_2DA_ENTRY 25 3 1 ~moaxe2~
    SET_2DA_ENTRY 26 0 1 ~BLUNT~
    SET_2DA_ENTRY 26 2 1 ~moblunt1~
    SET_2DA_ENTRY 26 3 1 ~moblunt2~
    SET_2DA_ENTRY 27 0 1 ~MISSILE~
    SET_2DA_ENTRY 27 2 1 ~momiss1~
    SET_2DA_ENTRY 27 3 1 ~momiss2~
    SET_2DA_ENTRY 28 0 1 ~SPEAR~
    SET_2DA_ENTRY 28 2 1 ~mospear1~
    SET_2DA_ENTRY 28 3 1 ~mospear2~
    PRETTY_PRINT_2DA
    BUT_ONLY

// Set Name and Description
COPY_EXISTING ~WEAPPROF.2DA~ ~override~
REPLACE ~mobow1~    @7100
REPLACE ~mobow2~    @7101
REPLACE ~mospike1~  @7102
REPLACE ~mospike2~  @7103
REPLACE ~mossword1~ @7104
REPLACE ~mossword2~ @7105
REPLACE ~molsword1~ @7106
REPLACE ~molsword2~ @7107
REPLACE ~moaxe1~    @7108
REPLACE ~moaxe2~    @7109
REPLACE ~moblunt1~  @7110
REPLACE ~moblunt2~  @7111
REPLACE ~momiss1~   @7112
REPLACE ~momiss2~   @7113
REPLACE ~mospear1~  @7114
REPLACE ~mospear2~  @7115
PRETTY_PRINT_2DA

// Append to Stats.IDS
APPEND ~stats.ids~ ~98 BOW~           UNLESS ~98 BOW~
APPEND ~stats.ids~ ~99 SPIKED~        UNLESS ~99 SPIKED~
APPEND ~stats.ids~ ~100 SMALL_SWORD~  UNLESS ~100 SMALL_SWORD~
APPEND ~stats.ids~ ~101 LARGE_SWORD~  UNLESS ~101 LARGE_SWORD~
APPEND ~stats.ids~ ~102 AXE~          UNLESS ~102 AXE~
APPEND ~stats.ids~ ~103 BLUNT~        UNLESS ~103 BLUNT~
APPEND ~stats.ids~ ~104 MISSILE~      UNLESS ~104 MISSILE~
APPEND ~stats.ids~ ~105 SPEAR~        UNLESS ~105 SPEAR~

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Add New Proficiencies                                                 //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
// Add to WEAPPROF.2DA                                                   //
///////////////////////////////////////////////////////////////////////////
COPY_EXISTING ~WEAPPROF.2DA~ ~override~
    SET_2DA_ENTRY 11 0 1 ~ARMOR~
    SET_2DA_ENTRY 11 2 1 ~moarm1~
    SET_2DA_ENTRY 11 3 1 ~moarm2~
    SET_2DA_ENTRY 12 0 1 ~SPELLCRAFT~
    SET_2DA_ENTRY 12 2 1 ~mospl1~
    SET_2DA_ENTRY 12 3 1 ~mospl2~
    SET_2DA_ENTRY 13 0 1 ~DEVOTION~
    SET_2DA_ENTRY 13 2 1 ~modev1~
    SET_2DA_ENTRY 13 3 1 ~modev2~

    SET_2DA_ENTRY 29 0 1 ~CRITICAL~
    SET_2DA_ENTRY 29 2 1 ~mocri1~
    SET_2DA_ENTRY 29 3 1 ~mocri2~
    SET_2DA_ENTRY 30 0 1 ~ARCHERY~
    SET_2DA_ENTRY 30 2 1 ~moarc1~
    SET_2DA_ENTRY 30 3 1 ~moarc2~     
    PRETTY_PRINT_2DA
  BUT_ONLY

// Set Name and Description
COPY_EXISTING ~WEAPPROF.2DA~ ~override~
REPLACE ~moarm1~    @7116
REPLACE ~moarm2~    @7117
REPLACE ~mospl1~    @7118
REPLACE ~mospl2~    @7119
REPLACE ~modev1~    @7120
REPLACE ~modev2~    @7121

REPLACE ~mocri1~    @7134
REPLACE ~mocri2~    @7135
REPLACE ~moarc1~    @7128
REPLACE ~moarc2~    @7129
PRETTY_PRINT_2DA

///////////////////////////////////////////////////////////////////////////
// Append to STATS.IDS                                                   //
///////////////////////////////////////////////////////////////////////////
APPEND ~stats.ids~ ~89 ARMOR_PROF~      UNLESS ~89 ARMOR_PROF~
APPEND ~stats.ids~ ~90 SPELLCRAFT~      UNLESS ~90 SPELLCRAFT~
APPEND ~stats.ids~ ~91 DEVOTION~        UNLESS ~91 DEVOTION~

APPEND ~stats.ids~ ~107 ARCHERY~        UNLESS ~107 ARCHERY~

///////////////////////////////////////////////////////////////////////////
// Append to SPLPROT.2DA                                                 //
///////////////////////////////////////////////////////////////////////////
// Armor Prof
ACTION_FOR_EACH armor IN
      0
      1
      2
      3
      4
      5 
    BEGIN
      APPEND ~splprot.2da~ ~mo_armor_prof%armor%%TAB%89%TAB%%armor%%TAB%1~
    END

// Spellcraft/Devotion Prof
ACTION_FOR_EACH spell IN
      1
      2
      3
      4
      5
    BEGIN
      APPEND ~splprot.2da~ ~mo_spl_prof%spell%%TAB%90%TAB%%spell%%TAB%4~ // Spellcraft
      APPEND ~splprot.2da~ ~mo_dev_prof%spell%%TAB%91%TAB%%spell%%TAB%4~ // Devotion
    END

// Archery Weapon Style
APPEND ~splprot.2da~ ~mo_arch_prof1%TAB%99%TAB%1%TAB%2~
APPEND ~splprot.2da~ ~mo_arch_prof2%TAB%99%TAB%2%TAB%2~

// Critical Stiker Weapon Style
APPEND ~splprot.2da~ ~mo_crit_prof1%TAB%106%TAB%1%TAB%1~
APPEND ~splprot.2da~ ~mo_crit_prof2%TAB%106%TAB%2%TAB%1~
APPEND ~splprot.2da~ ~mo_crit_prof3%TAB%106%TAB%2%TAB%1~

// Update all imported files so they point in the correct direction.
COPY_EXISTING ~splprot.2da~ ~override~
    COUNT_2DA_COLS cols
    READ_2DA_ENTRIES_NOW rows cols
    FOR (row = 1; row < rows; ++row) BEGIN
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~
      
      // ARMOR ----------------------------------------------------------------//
      // Armor Prof - 0 Pips
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_armor_prof0~ BEGIN 
        SET armor_prof0 = %row%
      // Armor Prof - 1 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_armor_prof1~ BEGIN
        SET armor_prof1 = %row%
      // Armor Prof - 2 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_armor_prof2~ BEGIN
        SET armor_prof2 = %row%
      // Armor Prof - 3 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_armor_prof3~ BEGIN
        SET armor_prof3 = %row%
      // Armor Prof - 4 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_armor_prof4~ BEGIN
        SET armor_prof4 = %row%
      // Armor Prof - 5 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_armor_prof5~ BEGIN
        SET armor_prof5 = %row%
      
      // SPELLCRAFT -----------------------------------------------------------//
      // Spellcraft - 1 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_spl_prof1~ BEGIN
        SET spl_prof1 = %row%
      // Spellcraft - 2 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_spl_prof2~ BEGIN
        SET spl_prof2 = %row%
      // Spellcraft - 3 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_spl_prof3~ BEGIN
        SET spl_prof3 = %row%
      // Spellcraft - 4 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_spl_prof4~ BEGIN
        SET spl_prof4 = %row%
      // Spellcraft - 5 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_spl_prof5~ BEGIN
        SET spl_prof5 = %row%

      // DEVOTION -------------------------------------------------------------//
      // Devotion - 1 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_dev_prof1~ BEGIN
        SET dev_prof1 = %row%
      // Devotion - 2 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_dev_prof2~ BEGIN
        SET dev_prof2 = %row%
      // Devotion - 3 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_dev_prof3~ BEGIN
        SET dev_prof3 = %row%
      // Devotion - 4 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_dev_prof4~ BEGIN
        SET dev_prof4 = %row%
      // Devotion - 5 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_dev_prof5~ BEGIN
        SET dev_prof5 = %row%

      // CRITICAL STRIKER -----------------------------------------------------//
      // Critical Striker - 1 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_crit_prof1~ BEGIN
        SET crit_prof1 = %row%
      // Critical Striker - 2 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_crit_prof2~ BEGIN
        SET crit_prof2 = %row%
      // Critical Striker - 3 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_crit_prof3~ BEGIN
        SET crit_prof3 = %row%

      // ARCHERY --------------------------------------------------------------//
      // Archery - 1 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_arch_prof1~ BEGIN
        SET arch_prof1 = %row%
      // Archery - 2 Pips
      END ELSE PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~mo_arch_prof2~ BEGIN
        SET arch_prof2 = %row%
      END
    END

// Armor Prof
COPY_EXISTING ~moarm01.spl~ ~override~
    LPF ALTER_EFFECT INT_VAR match_opcode = 326 parameter2 = %armor_prof0% END
COPY_EXISTING ~moarm02.spl~ ~override~
    LPF ALTER_EFFECT INT_VAR match_opcode = 326 parameter2 = %armor_prof1% END
COPY_EXISTING ~moarm03.spl~ ~override~
    LPF ALTER_EFFECT INT_VAR match_opcode = 326 parameter2 = %armor_prof2% END
COPY_EXISTING ~moarm04.spl~ ~override~
    LPF ALTER_EFFECT INT_VAR match_opcode = 326 parameter2 = %armor_prof3% END
COPY_EXISTING ~moarm05.spl~ ~override~
    LPF ALTER_EFFECT INT_VAR match_opcode = 326 parameter2 = %armor_prof4% END
COPY_EXISTING ~moarm06.spl~ ~override~
    LPF ALTER_EFFECT INT_VAR match_opcode = 326 parameter2 = %armor_prof5% END

// Spellcraft Prof
COPY_EXISTING ~mospl01.spl~ ~override~
    LPF ALTER_EFFECT INT_VAR match_opcode = 326 parameter2 = %spl_prof1% END
COPY_EXISTING ~mospl02.spl~ ~override~
    LPF ALTER_EFFECT INT_VAR match_opcode = 326 parameter2 = %spl_prof2% END
COPY_EXISTING ~mospl03.spl~ ~override~
    LPF ALTER_EFFECT INT_VAR match_opcode = 326 parameter2 = %spl_prof3% END
COPY_EXISTING ~mospl04.spl~ ~override~
    LPF ALTER_EFFECT INT_VAR match_opcode = 326 parameter2 = %spl_prof4% END
COPY_EXISTING ~mospl05.spl~ ~override~
    LPF ALTER_EFFECT INT_VAR match_opcode = 326 parameter2 = %spl_prof5% END

// Devotion Prof
COPY_EXISTING ~modev01.spl~ ~override~
    LPF ALTER_EFFECT INT_VAR match_opcode = 326 parameter2 = %dev_prof1% END
COPY_EXISTING ~modev02.spl~ ~override~
    LPF ALTER_EFFECT INT_VAR match_opcode = 326 parameter2 = %dev_prof2% END
COPY_EXISTING ~modev03.spl~ ~override~
    LPF ALTER_EFFECT INT_VAR match_opcode = 326 parameter2 = %dev_prof3% END
COPY_EXISTING ~modev04.spl~ ~override~
    LPF ALTER_EFFECT INT_VAR match_opcode = 326 parameter2 = %dev_prof4% END
COPY_EXISTING ~modev05.spl~ ~override~
    LPF ALTER_EFFECT INT_VAR match_opcode = 326 parameter2 = %dev_prof5% END

///////////////////////////////////////////////////////////////////////////
// Update ALL Classes/Kits in WEAPPROF.2DA                               //
///////////////////////////////////////////////////////////////////////////
COPY_EXISTING ~WEAPPROF.2DA~ ~override~
    // Set here if all classes are NOT getting the same amount
    SET_2DA_ENTRY 12  4 1 ~5~   // MAGE - Spellcraft Prof
    SET_2DA_ENTRY 11  5 1 ~5~   // FIGHTER - Armor Prof
    SET_2DA_ENTRY 11  6 1 ~2~   // CLERIC - Armor Prof
    SET_2DA_ENTRY 13  6 1 ~5~   // CLERIC - Devotion Prof
    SET_2DA_ENTRY 11  7 1 ~2~   // THIEF - Armor Prof
    SET_2DA_ENTRY 11  8 1 ~2~   // BARD - Armor Prof
    SET_2DA_ENTRY 12  8 1 ~5~   // BARD - Spellcraft Prof
    SET_2DA_ENTRY 11  9 1 ~5~   // PALADIN - Armor Prof
    SET_2DA_ENTRY 13  9 1 ~2~   // PALADIN - Devotion Prof
    SET_2DA_ENTRY 11 10 1 ~2~   // DRUID - Armor Prof
    SET_2DA_ENTRY 13 10 1 ~5~   // DRUID - Devotion Prof
    SET_2DA_ENTRY 11 11 1 ~5~   // RANGER - Armor Prof
    SET_2DA_ENTRY 13 11 1 ~2~   // RANGER - Devotion Prof
    SET_2DA_ENTRY 11 12 1 ~5~   // FIGHTER_MAGE - Armor Prof
    SET_2DA_ENTRY 12 12 1 ~5~   // FIGHTER_MAGE - Spellcraft Prof
    SET_2DA_ENTRY 11 13 1 ~5~   // FIGHTER_CLERIC - Armor Prof
    SET_2DA_ENTRY 13 13 1 ~5~   // FIGHTER_CLERIC - Devotion Prof
    SET_2DA_ENTRY 11 14 1 ~5~   // FIGHTER_THIEF - Armor Prof
    SET_2DA_ENTRY 11 15 1 ~5~   // FIGHTER_MAGE_THIEF - Armor Prof
    SET_2DA_ENTRY 12 15 1 ~5~   // FIGHTER_MAGE_THIEF - Spellcraft Prof
    SET_2DA_ENTRY 11 16 1 ~2~   // MAGE_THIEF - Armor Prof
    SET_2DA_ENTRY 12 16 1 ~5~   // MAGE_THIEF - Spellcraft Prof
    SET_2DA_ENTRY 11 17 1 ~2~   // CLERIC_MAGE - Armor Prof
    SET_2DA_ENTRY 12 17 1 ~5~   // CLERIC_MAGE - Spellcraft Prof
    SET_2DA_ENTRY 13 17 1 ~5~   // CLERIC_MAGE - Devotion Prof
    SET_2DA_ENTRY 11 18 1 ~2~   // CLERIC_THIEF - Armor Prof
    SET_2DA_ENTRY 13 18 1 ~5~   // CLERIC_THIEF - Devotion Prof
    SET_2DA_ENTRY 11 19 1 ~5~   // FIGHTER_DRUID - Armor Prof
    SET_2DA_ENTRY 13 19 1 ~5~   // FIGHTER_DRUID - Devotion Prof
    SET_2DA_ENTRY 11 20 1 ~5~   // FIGHTER_MAGE_CLERIC - Armor Prof
    SET_2DA_ENTRY 12 20 1 ~5~   // FIGHTER_MAGE_CLERIC - Spellcraft Prof
    SET_2DA_ENTRY 13 20 1 ~5~   // FIGHTER_MAGE_CLERIC - Devotion Prof
    SET_2DA_ENTRY 11 21 1 ~5~   // CLERIC_RANGER - Armor Prof
    SET_2DA_ENTRY 13 21 1 ~5~   // CLERIC_RANGER - Devotion Prof
    SET_2DA_ENTRY 12 22 1 ~5~   // ABJURER - Spellcraft Prof
    //SET_2DA_ENTRY 11 51 1 ~5~   // MONK - 
    SET_2DA_ENTRY 11 60 1 ~2~   // SHAMAN - Armor Prof
    SET_2DA_ENTRY 13 60 1 ~5~   // SHAMAN - Devotion Prof
    
    // This is used if ALL Classes are getting the same prof
    PATCH_FOR_EACH class_prof IN
          4  // MAGE
          5  // FIGHTER
          6  // CLERIC
          7  // THIEF
          8  // BARD
          9  // PALADIN
          10 // DRUID
          11 // RANGER
          12 // FIGHTER_MAGE
          13 // FIGHTER_CLERIC
          14 // FIGHTER_THIEF
          15 // FIGHTER_MAGE_THIEF
          16 // MAGE_THIEF
          17 // CLERIC_MAGE
          18 // CLERIC_THIEF
          19 // FIGHTER_DRUID
          20 // FIGHTER_MAGE_CLERIC
          21 // CLERIC_RANGER
          22 // ABJURERER
          51 // MONK
          60 // SHAMAN
        BEGIN
          SET_2DA_ENTRY 29 class_prof 1 ~3~   // Critical Striker Weapon Style
          SET_2DA_ENTRY 30 class_prof 1 ~2~   // Archery Weapon Style
        END
    PRETTY_PRINT_2DA
  BUT_ONLY

// MAGE/SORCERER BASE CLASS CLAB
COPY_EXISTING ~CLABMA01.2DA~ override
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC1 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC2 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC3 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC4 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC5 END
    PRETTY_PRINT_2DA
BUT_ONLY

// CLERIC BASE CLASS CLAB
COPY_EXISTING ~CLABPR01.2DA~ override
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
    PRETTY_PRINT_2DA
  BUT_ONLY

// BARD BASE CLASS CLAB
COPY_EXISTING ~CLABBA01.2DA~ override
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC1 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC2 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC3 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC4 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC5 END
    PRETTY_PRINT_2DA
  BUT_ONLY

// PALADIN BASE CLASS CLAB
COPY_EXISTING ~CLABPA01.2DA~ override
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
    PRETTY_PRINT_2DA
  BUT_ONLY

// DRUID BASE CLASS CLAB
COPY_EXISTING ~CLABDR01.2DA~ override
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
    PRETTY_PRINT_2DA
  BUT_ONLY

// RANGER BASE CLASS CLAB
COPY_EXISTING ~CLABRN01.2DA~ override
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
    PRETTY_PRINT_2DA
  BUT_ONLY

// SHAMAN BASE CLASS CLAB
COPY_EXISTING ~CLABSH01.2DA~ override
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
    LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
    PRETTY_PRINT_2DA
  BUT_ONLY

COPY_EXISTING ~KITLIST.2DA~ ~override~
  READ_2DA_ENTRIES_NOW ~all_kitlist~ 10
  FOR (row = 1; row < all_kitlist; row += 1) BEGIN
  READ_2DA_ENTRY_FORMER ~all_kitlist~ row 5 kit_clab
  READ_2DA_ENTRY_FORMER ~all_kitlist~ row 1 kit_label
  READ_2DA_ENTRY_FORMER ~all_kitlist~ row 8 kit_class

  // MAGE KITS
  PATCH_IF (%kit_class% = 1) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 12 (col + 1) 1 ~5~   // Spellcraft Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END

    // Spellcraft Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABMA01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END

  // FIGHTER KITS
  PATCH_IF (%kit_class% = 2) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~5~   // Armor Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END
  END

  // CLERIC KITS
  PATCH_IF (%kit_class% = 3) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~2~   // Armor Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END

    // Devotion Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABPR01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END

  // THIEF KITS
  PATCH_IF (%kit_class% = 4) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~2~   // Armor Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END
  END
  
  // BARD KITS
  PATCH_IF (%kit_class% = 5) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~2~   // Armor Prof
          SET_2DA_ENTRY 12 (col + 1) 1 ~5~   // Spellcraft Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END

    // Spellcraft Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABBA01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END

  // PALADIN KITS
  PATCH_IF (%kit_class% = 6) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~5~   // Armor Prof
          SET_2DA_ENTRY 13 (col + 1) 1 ~2~   // Devotion Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END

    // Devotion Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABPA01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END

  // FIGHTER_MAGE KITS
  PATCH_IF (%kit_class% = 7) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~5~   // Armor Prof
          SET_2DA_ENTRY 12 (col + 1) 1 ~5~   // Spellcraft Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END

    // Spellcraft Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABMA01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END

  // FIGHTER_CLERIC KITS
  PATCH_IF (%kit_class% = 8) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~5~   // Armor Prof
          SET_2DA_ENTRY 13 (col + 1) 1 ~5~   // Devotion Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END

    // Devotion Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABPR01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END

  // FIGHTER_THIEF KITS
  PATCH_IF (%kit_class% = 9) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 0; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~5~   // Armor Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END
  END

  // FIGHTER_MAGE_THIEF KITS
  PATCH_IF (%kit_class% = 10) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~5~   // Armor Prof
          SET_2DA_ENTRY 12 (col + 1) 1 ~5~   // Spellcraft Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END

    // Spellcraft Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABMA01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END

  // DRUID KITS
  PATCH_IF (%kit_class% = 11) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~2~   // Armor Prof
          SET_2DA_ENTRY 13 (col + 1) 1 ~5~   // Devotion Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END

    // Devotion Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABDR01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END

  // RANGER KITS
  PATCH_IF (%kit_class% = 12) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~5~   // Armor Prof
          SET_2DA_ENTRY 13 (col + 1) 1 ~2~   // Devotion Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END

    // Devotion Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABRN01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END

  // MAGE_THIEF KITS
  PATCH_IF (%kit_class% = 13) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~2~   // Armor Prof
          SET_2DA_ENTRY 12 (col + 1) 1 ~5~   // Spellcraft Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END

    // Spellcraft Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABMA01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END

  // CLERIC_MAGE KITS
  PATCH_IF (%kit_class% = 14) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~2~   // Armor Prof
          SET_2DA_ENTRY 12 (col + 1) 1 ~5~   // Spellcraft Prof
          SET_2DA_ENTRY 13 (col + 1) 1 ~5~   // Devotion Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END

    // Spellcraft Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABMA01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END

    // Devotion Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABPR01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END

  // CLERIC_THIEF KITS
  PATCH_IF (%kit_class% = 15) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~2~   // Armor Prof
          SET_2DA_ENTRY 13 (col + 1) 1 ~5~   // Devotion Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END

    // Devotion Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABPR01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END

  // FIGHTER_DRUID KITS
  PATCH_IF (%kit_class% = 16) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~5~   // Armor Prof
          SET_2DA_ENTRY 13 (col + 1) 1 ~5~   // Devotion Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END

    // Devotion Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABDR01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END

  // FIGHTER_MAGE_CLERIC KITS
  PATCH_IF (%kit_class% = 17) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~5~   // Armor Prof
          SET_2DA_ENTRY 12 (col + 1) 1 ~5~   // Spellcraft Prof
          SET_2DA_ENTRY 13 (col + 1) 1 ~5~   // Devotion Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END

    // Spellcraft Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABMA01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END

    // Devotion Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABPR01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END

  // CLERIC_RANGER KITS
  PATCH_IF (%kit_class% = 18) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~5~   // Armor Prof
          SET_2DA_ENTRY 13 (col + 1) 1 ~5~   // Devotion Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END

      // Devotion Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABRN01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
    END

    // Devotion Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABPR01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END
  
  // SORCERER KITS
  PATCH_IF (%kit_class% = 19) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 12 (col + 1) 1 ~5~   // Spellcraft Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END

    // Spellcraft Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABMA01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MOSPLC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END

  // MONK KITS
  PATCH_IF (%kit_class% = 20) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END
  END

  // SHAMAN KITS
  PATCH_IF (%kit_class% = 21) BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~WEAPPROF.2DA~ ~override~
      READ_2DA_ENTRIES_NOW kitnames 3
      COUNT_2DA_COLS cols
      FOR (col = 22; col < cols - 1; ++col) BEGIN
      READ_2DA_ENTRY_FORMER kitnames 0 col column_name
      PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
          SET_2DA_ENTRY 11 (col + 1) 1 ~5~   // Armor Prof
          SET_2DA_ENTRY 13 (col + 1) 1 ~5~   // Devotion Prof
          SET_2DA_ENTRY 30 (col + 1) 1 ~2~   // Archery Weapon Style
          PRETTY_PRINT_2DA
      END 
      END
    END

    // Devotion Prof
    PATCH_IF !("%kit_clab%" STRING_EQUAL_CASE "CLABSH01") BEGIN
    INNER_ACTION BEGIN
    COPY_EXISTING ~%kit_clab%.2DA~ override
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC1 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC2 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC3 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC4 END
          LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 f_Increment = 1 STR_VAR f_Entry = AP_MODEVC5 END
          PRETTY_PRINT_2DA
        BUT_ONLY
    END
    END
  END
  END

///////////////////////////////////////////////////////////////////////////
// Assign Proficiencies to Items                                         //
///////////////////////////////////////////////////////////////////////////
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  READ_BYTE  0x31 prof
  READ_SHORT 0x1c type

  // Armor Proficiency
  PATCH_IF (type = 2) BEGIN 
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 177 target = 1 parameter1 = 0 parameter2 = 2 timing = 2 STR_VAR resource = ~moarm01~ END
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 177 target = 1 parameter1 = 0 parameter2 = 2 timing = 2 STR_VAR resource = ~moarm02~ END
    //LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 177 target = 1 parameter1 = 0 parameter2 = 2 timing = 2 STR_VAR resource = ~moarm03~ END // Basically No Effect
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 177 target = 1 parameter1 = 0 parameter2 = 2 timing = 2 STR_VAR resource = ~moarm04~ END
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 177 target = 1 parameter1 = 0 parameter2 = 2 timing = 2 STR_VAR resource = ~moarm05~ END
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 177 target = 1 parameter1 = 0 parameter2 = 2 timing = 2 STR_VAR resource = ~moarm06~ END
  END

  // Archery Weapon Style
  PATCH_IF (prof = 104) OR  // Longbow
        (prof = 105) OR     // Shortbow
        (prof = 103) OR     // Crossbow
        (prof = 106) OR     // Dart
        (prof = 107) BEGIN  // Sling
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 177 target = 1 parameter1 = 0 parameter2 = 2 timing = 2 resist_dispel = 0 probability1 = 100 STR_VAR resource = ~MOARC02~ END 
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 318 target = 1 parameter1 = 0 parameter2 = %arch_prof2% timing = 2 STR_VAR resource = ~MOARC02~ END
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 177 target = 1 parameter1 = 0 parameter2 = 2 timing = 2 resist_dispel = 0 probability1 = 100 STR_VAR resource = ~MOARC01~ END 
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 318 target = 1 parameter1 = 0 parameter2 = %arch_prof1% timing = 2 STR_VAR resource = ~MOARC01~ END
  END

  // Critical Weapon Striker Weapon Style 
  PATCH_IF (prof = 89) OR // Bastard Sword
      (prof = 92)  OR     // Axe
      (prof = 99)  OR     // Halberd
      (prof = 94)  OR     // Katana
      (prof = 102) OR     // Quarterstaff
      (prof = 98)  OR     // Spear
      (prof = 93)  OR     // Two-Handed Sword
      (prof = 90)  OR     // Longsword
      (prof = 91)  OR     // Short Sword        
      (prof = 95)  OR     // Scimitar Wakizashi NinjaTo
      (prof = 96)  OR     // Dagger
      (prof = 97)  OR     // Warhammer
      (prof = 100) OR     // Flail Morningstar
      (prof = 101) OR     // Mace
      (prof = 103) OR     // Crossbow
      (prof = 104) OR     // Long Bow
      (prof = 105) OR     // Short Bow
      (prof = 106) OR     // Dart
      (prof = 107) OR     // Sling
      (prof = 108) OR     // Black Jack
      (prof = 115) BEGIN  // Club
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 341 target = 1 parameter2 = 1 timing = 2 resist_dispel = 0 probability1 = 100 STR_VAR resource = ~MOCRS03~ END
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 341 target = 1 parameter2 = 1 timing = 2 resist_dispel = 0 probability1 = 100 STR_VAR resource = ~MOCRS02~ END
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 341 target = 1 parameter2 = 1 timing = 2 resist_dispel = 0 probability1 = 100 STR_VAR resource = ~MOCRS01~ END 
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 318 target = 1 parameter1 = 0 parameter2 = %crit_prof3% timing = 2 STR_VAR resource = ~MOCRS03~ END
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 318 target = 1 parameter1 = 0 parameter2 = %crit_prof2% timing = 2 STR_VAR resource = ~MOCRS02~ END
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 318 target = 1 parameter1 = 0 parameter2 = %crit_prof1% timing = 2 STR_VAR resource = ~MOCRS01~ END
  END ELSE PATCH_IF (prof = 0) && (type = 28) BEGIN // Fist Weapons
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 341 target = 1 parameter2 = 1 timing = 2 resist_dispel = 0 probability1 = 100 STR_VAR resource = ~MOCRS03~ END
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 341 target = 1 parameter2 = 1 timing = 2 resist_dispel = 0 probability1 = 100 STR_VAR resource = ~MOCRS02~ END
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 341 target = 1 parameter2 = 1 timing = 2 resist_dispel = 0 probability1 = 100 STR_VAR resource = ~MOCRS01~ END 
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 318 target = 1 parameter1 = 0 parameter2 = %crit_prof3% timing = 2 STR_VAR resource = ~MOCRS03~ END
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 318 target = 1 parameter1 = 0 parameter2 = %crit_prof2% timing = 2 STR_VAR resource = ~MOCRS02~ END
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 318 target = 1 parameter1 = 0 parameter2 = %crit_prof1% timing = 2 STR_VAR resource = ~MOCRS01~ END
  END

  // Bow Weapon Group
  PATCH_IF (prof = 104) OR (prof = 105) BEGIN
    WRITE_BYTE 0x31 98
    // Add EFF File here to add +1 Thac0 if Elf
  END

  // Spiked Weapon Group
  PATCH_IF (prof = 100) BEGIN
    WRITE_BYTE 0x31 99
  END

  // Small Sword Weapon Group
  PATCH_IF (prof = 91) OR (prof = 96) BEGIN
    WRITE_BYTE 0x31 100
  END

  // Add EFF File here to add +1 Thac0 to Long Swords if Elf

  // Large Sword Weapon Group
  PATCH_IF (prof = 89) OR   // Bastard Sword
        (prof = 90) OR      // Long Sword
        (prof = 93) OR      // Two-Handed Sword
        (prof = 94) OR      // Katana
        (prof = 95) BEGIN   // Scimitar
    WRITE_BYTE 0x31 101
  END

  // Axe Weapon Group
  PATCH_IF (prof = 92) BEGIN
    WRITE_BYTE 0x31 102
  END

  // Blunt Weapon Group
  PATCH_IF (prof = 97) OR   // Warhammer
        (prof = 115) OR     // Club
        (prof = 101) OR     // Mace
        (prof = 102) BEGIN  // Quarterstaff
    WRITE_BYTE 0x31 103
  END

  // Add EFF File here to add +1 Thac0 to Slings if Halfling

  // Missile Weapon Group
  PATCH_IF (prof = 103) OR  // Crossbow
        (prof = 106) OR     // Dart
        (prof = 107) BEGIN  // Sling
    WRITE_BYTE 0x31 104
  END

  // Spear Weapon Group
  PATCH_IF (prof = 98) OR (prof = 99) BEGIN
    WRITE_BYTE 0x31 105
  END
  BUT_ONLY